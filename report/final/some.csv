Category,Attribute,"CA-40: Basic Cloud Metrics and Logs","CA-41: Centralized Logging & Metrics","CA-42: Distributed Tracing"
Advantages,"","Zero initial setup cost or complexity.","Provides a ""single pane of glass"" for all logs and metrics. Enables powerful querying, dashboarding, and proactive alerting.","Pinpoints the exact source of latency or errors in a complex, multi-service request. Drastically reduces time to diagnose issues."
Disadvantages,"","Extremely slow and inefficient for debugging; not scalable for a microservices architecture; purely reactive.","Adds operational overhead to manage the monitoring stack; can't easily show the causal relationship between events in different services.","Higher implementation complexity, as it requires code instrumentation in every service; can add minor performance overhead."
Quality Requirement,"QA_10: Monitoring and Alerting","(--) Very Negative. Fails to meet the requirement as it provides no mechanism for proactive, application-level alerting. Mean Time To Detect (MTTD) is extremely high.","(++) Excellent. Directly provides the foundation for monitoring key health metrics and triggering automated alerts when thresholds are breached.","(+++) Superior. Enhances alerting with deep context. Instead of just knowing a service is slow, you know which downstream call is making it slow, enabling more intelligent and actionable alerts."
Quality Requirement,"NFR_04: System Recovery","(-) Negative. The long time required to diagnose a problem directly increases the Mean Time To Recover (MTTR), leading to longer outages.","(+) Good. By drastically reducing MTTD, it enables a much faster start to the recovery process, thus improving MTTR.","(++) Excellent. Provides the fastest possible root cause analysis, minimizing diagnosis time and leading to the lowest possible MTTR."
Decision,"","","SELECTED as the essential foundation. Centralized data is a non-negotiable requirement for observability.","SELECTED as a critical layer on top of CA-41. For a distributed system, tracing is the only effective way to debug and understand system performance."